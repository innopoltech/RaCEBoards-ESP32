module main
author unknown
version 1 0 
description ''

script 731 50 {
whenStarted
comment 'Базовые операции'
comment 'Все операции также доступны без прямой конвертации'
local 'a' ('[misc:String2Float]' '-4.5')
local 'b' ('[misc:String2Float]' '10')
sayIt a b ('[misc:Float2String]' (FloatSum a b)) ('[misc:Float2String]' (FloatSub a b)) ('[misc:Float2String]' (FloatMul '-4.5' '10')) ('[misc:Float2String]' (FloatDiv '-4.5' '10'))
}

script 108 68 {
whenStarted
comment 'Конвертация доступна между числа/строки <--> float'
comment 'Разделитель точка!'
comment 'При конвертации float в строку - 6 знаков после запятой '
comment 'При конвертации float в число - без округления (дробная часть отбрасывается) '
local 'int' 5
local 'string' '-7.156'
local 'a' ('[misc:Int2Float]' int)
local 'b' ('[misc:String2Float]' string)
local 'a_str' ('[misc:Float2String]' a)
local 'b_int' ('[misc:Float2Int]' b)
sayIt int ' and ' string ' - >' a ' and ' b '->' a_str ' and ' b_int
}

script 718 420 {
whenStarted
comment 'Операции сравнения'
comment 'Все операции также доступны без прямой конвертации'
sayIt (FloatLE '3.0' '4.0') (FloatLEorEQ '3.0' '4.0') (FloatEQ '3.0' '4.0') (FloatnoEQ '3.0' '4.0') (FloatGE '3.0' '4.0') (FloatGEorEQ '3.0' '4.0')
}

script 93 707 {
whenStarted
comment 'Математика с одним аргументом'
comment 'Тригонометрические операции все через радианы'
comment 'Все операции также доступны без прямой конвертации'
sayIt ('[misc:Float2String]' (FloatRad2deg (FloatDiv '3.1415' '2'))) ('[misc:Float2String]' (FloatDeg2rad '360')) ('[misc:Float2String]' (FloatLn (FloatExp '1'))) ('[misc:Float2String]' (FloatLog_10 '10000')) ('[misc:Float2String]' (FloatPow2 '9')) ('[misc:Float2String]' (FloatSqrt '6.25')) ('[misc:Float2String]' (FloatSin (FloatDeg2rad '45'))) ('[misc:Float2String]' (FloatCos (FloatDeg2rad '180'))) ('[misc:Float2String]' (FloatRad2deg (FloatAtan '1.000009'))) ('[misc:Float2Int]' (FloatRad2deg (FloatAtan '1.000009')))
}

script 665 732 {
whenStarted
comment 'Математика с несколькими аргументами'
comment 'Все операции также доступны без прямой конвертации'
sayIt ('[misc:Float2String]' (FloatLog_x '256' '2')) ('[misc:Float2String]' (FloatPow_x '16' '2')) ('[misc:Float2String]' (FloatSqrt_x '125' '3'))
}


module FMath
author INNOPOL
version 0 1 
description 'Float-point math lib'

  spec 'r' '[misc:String2Float]' 'str2float _' 'str' '0'
  spec 'r' '[misc:Int2Float]' 'int2float _' 'auto' 0
  spec 'r' '[misc:Float2Int]' 'float2int _' 'str' '0'
  spec 'r' '[misc:Float2String]' 'float2str _' 'str' '0'
  space
  spec 'r' 'FloatSum' 'f _ + _' 'str str' '10.0' '2.0'
  spec 'r' 'FloatSub' 'f _ - _' 'str str' '10.0' '2.0'
  spec 'r' 'FloatMul' 'f _ * _' 'str str' '10.0' '2.0'
  spec 'r' 'FloatDiv' 'f _ / _' 'str str' '10.0' '2.0'
  space
  spec 'r' 'FloatLE' 'f _ < _' 'str str' '3.0' '4.0'
  spec 'r' 'FloatLEorEQ' 'f _ <= _' 'str str' '3.0' '4.0'
  spec 'r' 'FloatEQ' 'f _ = _' 'str str' '3.0' '4.0'
  spec 'r' 'FloatnoEQ' 'f _ != _' 'str str' '3.0' '4.0'
  spec 'r' 'FloatGE' 'f _ > _' 'str str' '3.0' '4.0'
  spec 'r' 'FloatGEorEQ' 'f _ >= _' 'str str' '3.0' '4.0'
  space
  spec 'r' 'FloatRad2deg' 'f rad2deg _' 'str' '3.14'
  spec 'r' 'FloatDeg2rad' 'f deg2rad _' 'str' '180'
  spec 'r' 'FloatLn' 'f ln _' 'str' '1.1'
  spec 'r' 'FloatLog_10' 'f log_10 _' 'str' '1.1'
  spec 'r' 'FloatExp' 'f exp _' 'str' '1.1'
  spec 'r' 'FloatPow2' 'f pow2 _' 'str' '1.1'
  spec 'r' 'FloatSqrt' 'f sqrt _' 'str' '1.1'
  spec 'r' 'FloatSin' 'f sin _' 'str' '1.1'
  spec 'r' 'FloatCos' 'f cos _' 'str' '1.1'
  spec 'r' 'FloatTan' 'f tan _' 'str' '1.1'
  spec 'r' 'FloatAsin' 'f asin _' 'str' '1.1'
  spec 'r' 'FloatAcos' 'f acos _' 'str' '1.1'
  spec 'r' 'FloatAtan' 'f atan _' 'str' '1.1'
  space
  spec 'r' 'FloatLog_x' 'f log_x _ base _' 'str str' '256' '2'
  spec 'r' 'FloatPow_x' 'f pow_x _ to _' 'str str' '16' '2'
  spec 'r' 'FloatSqrt_x' 'f sqrt _ from _' 'str str' '256' '4'

to FloatAcos val1 {
  return ('[misc:FloatASAdv]' 11 val1)
}

to FloatAsin val1 {
  return ('[misc:FloatASAdv]' 10 val1)
}

to FloatAtan val1 {
  return ('[misc:FloatASAdv]' 12 val1)
}

to FloatCos val1 {
  return ('[misc:FloatASAdv]' 8 val1)
}

to FloatDeg2rad val1 {
  return ('[misc:FloatASAdv]' 1 val1)
}

to FloatDiv val1 val2 {
  return ('[misc:FloatABase]' 3 val1 val2)
}

to FloatEQ val1 val2 {
  return ('[misc:FloatCBase]' 2 val1 val2)
}

to FloatExp val1 {
  return ('[misc:FloatASAdv]' 4 val1)
}

to FloatGE val1 val2 {
  return ('[misc:FloatCBase]' 4 val1 val2)
}

to FloatGEorEQ val1 val2 {
  return ('[misc:FloatCBase]' 5 val1 val2)
}

to FloatLE val1 val2 {
  return ('[misc:FloatCBase]' 0 val1 val2)
}

to FloatLEorEQ val1 val2 {
  return ('[misc:FloatCBase]' 1 val1 val2)
}

to FloatLn val1 {
  return ('[misc:FloatASAdv]' 2 val1)
}

to FloatLog_10 val1 {
  return ('[misc:FloatASAdv]' 3 val1)
}

to FloatLog_x val1 val2 {
  return ('[misc:FloatAMAdv]' 0 val1 val2)
}

to FloatMul val1 val2 {
  return ('[misc:FloatABase]' 2 val1 val2)
}

to FloatPow2 val1 {
  return ('[misc:FloatASAdv]' 5 val1)
}

to FloatPow_x val1 val2 {
  return ('[misc:FloatAMAdv]' 1 val1 val2)
}

to FloatRad2deg val1 {
  return ('[misc:FloatASAdv]' 0 val1)
}

to FloatSin val1 {
  return ('[misc:FloatASAdv]' 7 val1)
}

to FloatSqrt val1 {
  return ('[misc:FloatASAdv]' 6 val1)
}

to FloatSqrt_x val1 val2 {
  return ('[misc:FloatAMAdv]' 2 val1 val2)
}

to FloatSub val1 val2 {
  return ('[misc:FloatABase]' 1 val1 val2)
}

to FloatSum val1 val2 {
  return ('[misc:FloatABase]' 0 val1 val2)
}

to FloatTan val1 {
  return ('[misc:FloatASAdv]' 9 val1)
}

to FloatnoEQ val1 val2 {
  return ('[misc:FloatCBase]' 3 val1 val2)
}

