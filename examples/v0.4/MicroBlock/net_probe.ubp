module main
author unknown
version 1 0 
description ''

script 122 54 {
whenStarted
comment 'Подключение к WIFI сети'
if else {
  local 'ssid' ''
  local 'password' ''
  wifiConnect ssid password
  waitMillis 2000
  forever {
    sayIt ('[net:myIPAddress]')
    waitMillis 1000
  }
}
}

script 576 54 {
whenStarted
comment 'Создание UDP сервера'
if else {
  repeatUntil (('[net:myIPAddress]') != '0.0.0.0') {
    sayIt 'Wait wifi connection...'
    waitMillis 100
  }
  '[net:udpStart]' 5000
  sayIt 'UDP server started! Wait data...'
  local 'buff' 0
  forever {
    buff = ('[net:udpReceivePacket]')
    if (buff != '') {
      sayIt 'RX -> ' buff
    }
    waitMillis 10
  }
}
}


module UDP_m
author INNOPOL
version 0 1 
description 'Only receive UDP packets.'

  spec ' ' '[net:udpStart]' 'UDP start port _' 'auto' 5000
  spec ' ' '[net:udpStop]' 'UDP stop'
  spec 'r' '[net:udpReceivePacket]' 'UDP receive packet : binary data _' 'bool' false

module Wifi_m
author INNOPOL
version 0 1 
description 'Connect to a WiFi network. Used in conjunction with other network libraries.'

  spec ' ' 'wifiConnect' 'wifi connect to _ password _' 'str str' 'Network_Name' ''
  spec 'r' 'getIPAddress' 'IP address'

to getIPAddress {
  return ('[net:myIPAddress]')
}

to wifiConnect ssid password {
  if (not ('[net:hasWiFi]')) {return}
  '[net:stopWiFi]'
  waitMillis 2000
  '[net:startWiFi]' ssid password
  local 'startMSecs' (millisOp)
  repeat 30 {
    sayIt 'Try connect:' (((millisOp) - startMSecs) / 1000) '/ 30 sec'
    if (((millisOp) - startMSecs) > 30000) {
      sayIt 'Could not connect!'
      return 0
    }
    if (('[net:myIPAddress]') != '0.0.0.0') {
      sayIt 'Connected!'
      waitMillis 2000
      sayIt ('[net:myIPAddress]')
      return 0
    }
    waitMillis 1100
  }
}

